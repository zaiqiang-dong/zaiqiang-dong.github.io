import{_ as a,o as n,c as e,a as r}from"./app.21cc2de4.js";const F=JSON.parse('{"title":"文件接口","description":"","frontmatter":{},"headers":[{"level":2,"title":"1.文件系统","slug":"_1-文件系统","link":"#_1-文件系统","children":[]},{"level":2,"title":"2.文件接口描述","slug":"_2-文件接口描述","link":"#_2-文件接口描述","children":[]}],"relativePath":"linux/ftrace/file-interface/file-interface.md"}'),l={name:"linux/ftrace/file-interface/file-interface.md"};function p(t,s,o,c,i,h){return n(),e("div",null,s[0]||(s[0]=[r(`<h1 id="文件接口" tabindex="-1">文件接口 <a class="header-anchor" href="#文件接口" aria-hidden="true">#</a></h1><h2 id="_1-文件系统" tabindex="-1">1.文件系统 <a class="header-anchor" href="#_1-文件系统" aria-hidden="true">#</a></h2><p>ftrace使用专用的文件系统ftracefs,挂载如下：</p><div class="language-C line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki monokai"><code><span class="line"><span style="color:#F8F8F2;">tracefs on </span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">sys</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">kernel</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">tracing type </span><span style="color:#A6E22E;">tracefs</span><span style="color:#F8F8F2;"> (rw,nosuid,nodev,noexec,relatime)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="_2-文件接口描述" tabindex="-1">2.文件接口描述 <a class="header-anchor" href="#_2-文件接口描述" aria-hidden="true">#</a></h2><p><strong>current_trace</strong> 当前使用的tracer，默认是nop.</p><div class="language-c line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki monokai"><code><span class="line"><span style="color:#F8F8F2;">root@M:</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">sys</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">kernel</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">tracing# cat current_tracer </span></span>
<span class="line"><span style="color:#F8F8F2;">nop</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>available_tracers</strong> 当前已经注册的tracer</p><div class="language-c line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki monokai"><code><span class="line"><span style="color:#F8F8F2;">root@M:</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">sys</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">kernel</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">tracing# cat available_tracers </span></span>
<span class="line"><span style="color:#F8F8F2;">hwlat blk mmiotrace function_graph wakeup_dl wakeup_rt wakeup function nop</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>tracing_on</strong></p><ul><li>0 : disable ring buffer</li><li>1 : enable ring buffer</li></ul><p>这个只是针对ring buffer而言，并非禁用了tarce,只是不写入ring buffer.</p><hr><hr><hr><hr><hr><hr><hr><hr><hr><hr><hr><hr><hr><hr><hr><hr><hr><hr><hr><hr><hr><hr><hr><hr><hr><hr><hr><hr><hr><hr><hr><hr><hr><hr>`,46)]))}const u=a(l,[["render",p]]);export{F as __pageData,u as default};
