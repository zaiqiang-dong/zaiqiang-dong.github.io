import{_ as d,o as e,c as a,a as r}from"./app.addf718b.js";const u=JSON.parse('{"title":"问题","description":"","frontmatter":{},"headers":[{"level":2,"title":"技术问题","slug":"技术问题","link":"#技术问题","children":[]},{"level":2,"title":"配置问题","slug":"配置问题","link":"#配置问题","children":[]},{"level":2,"title":"待写文章","slug":"待写文章","link":"#待写文章","children":[]}],"relativePath":"todo.md"}'),i={name:"todo.md"};function s(o,t,n,l,c,h){return e(),a("div",null,t[0]||(t[0]=[r('<h1 id="问题" tabindex="-1">问题 <a class="header-anchor" href="#问题" aria-hidden="true">#</a></h1><h2 id="技术问题" tabindex="-1">技术问题 <a class="header-anchor" href="#技术问题" aria-hidden="true">#</a></h2><table><thead><tr><th>问题</th><th>状态(1.未开始 2.进行中 3.已完成)</th><th>备注</th></tr></thead><tbody><tr><td>kconfig问题</td><td></td><td></td></tr><tr><td>cgroup</td><td></td><td></td></tr><tr><td>netlink kmod uevent</td><td></td><td></td></tr></tbody></table><h2 id="配置问题" tabindex="-1">配置问题 <a class="header-anchor" href="#配置问题" aria-hidden="true">#</a></h2><table><thead><tr><th>问题</th><th>状态(1.未开始 2.进行中 3.已完成)</th><th>备注</th></tr></thead><tbody><tr><td>docker windows</td><td></td><td></td></tr><tr><td>vim 英语提示kd, 无道词典</td><td></td><td></td></tr><tr><td>vim clang 方式gr显示引用不全</td><td></td><td></td></tr><tr><td>从timeminal 复制到feishu 粘贴发送</td><td></td><td></td></tr><tr><td>kernel dmesg与串口输出</td><td></td><td></td></tr><tr><td>中断再总结</td><td></td><td></td></tr><tr><td>android cgroup</td><td></td><td></td></tr><tr><td>快速定位crash的行</td><td></td><td></td></tr></tbody></table><h2 id="待写文章" tabindex="-1">待写文章 <a class="header-anchor" href="#待写文章" aria-hidden="true">#</a></h2><table><thead><tr><th>文章</th><th>状态(1.未开始 2.进行中 3.已完成)</th><th>备注</th></tr></thead><tbody><tr><td></td><td></td><td></td></tr></tbody></table><p>@startuml</p><p>abstract class AbstractList abstract AbstractCollection interface List interface Collection</p><p>List &lt;|-- AbstractList Collection &lt;|-- AbstractCollection</p><p>Collection &lt;|- List AbstractCollection &lt;|- AbstractList AbstractList &lt;|-- ArrayList</p><p>class ArrayList { Object[] elementData size() }</p><p>enum TimeUnit { DAYS HOURS MINUTES }</p><p>annotation SuppressWarnings</p><p>@enduml</p><p>@startuml start if (condition A) then (yes) :Text 1; elseif (condition B) then (yes) :Text 2; stop (no) elseif (condition C) then (yes) :Text 3; (no) elseif (condition D) then (yes) :Text 4; else (nothing) :Text else; endif stop @enduml</p><p>@startuml clock &quot;Clock_0&quot; as C0 with period 50 clock &quot;Clock_1&quot; as C1 with period 50 pulse 15 offset 10 binary &quot;Binary&quot; as B concise &quot;Concise&quot; as C robust &quot;Robust&quot; as R analog &quot;Analog&quot; as A</p><p>@0 C is Idle R is Idle A is 0</p><p>@100 B is high C is Waiting R is Processing A is 3</p><p>@300 R is Waiting A is 1 @enduml</p>',20)]))}const b=d(i,[["render",s]]);export{u as __pageData,b as default};
