import{_ as r,r as i,o as l,c as n,a as d,b as h}from"./app.21cc2de4.js";const f=JSON.parse('{"title":"LINUX抢占","description":"","frontmatter":{},"headers":[{"level":2,"title":"1. 什么是抢占","slug":"_1-什么是抢占","link":"#_1-什么是抢占","children":[]},{"level":2,"title":"2. 抢占引发的问题","slug":"_2-抢占引发的问题","link":"#_2-抢占引发的问题","children":[{"level":3,"title":"2.1 无法唤醒","slug":"_2-1-无法唤醒","link":"#_2-1-无法唤醒","children":[]},{"level":3,"title":"2.1 无法调度","slug":"_2-1-无法调度","link":"#_2-1-无法调度","children":[]}]},{"level":2,"title":"3. 小结","slug":"_3-小结","link":"#_3-小结","children":[]}],"relativePath":"linux/process/preemption/preemption.md"}'),s={name:"linux/process/preemption/preemption.md"};function o(t,e,c,p,_,u){const a=i("Vssue");return l(),n("div",null,[e[0]||(e[0]=d('<h1 id="linux抢占" tabindex="-1">LINUX抢占 <a class="header-anchor" href="#linux抢占" aria-hidden="true">#</a></h1><hr><table><thead><tr><th>软件版本</th><th>硬件版本</th><th>更新内容</th></tr></thead><tbody><tr><td>linux 5.8.18</td><td>arm64</td><td></td></tr></tbody></table><hr><h2 id="_1-什么是抢占" tabindex="-1">1. 什么是抢占 <a class="header-anchor" href="#_1-什么是抢占" aria-hidden="true">#</a></h2><p>抢占在很多文章中都有介绍，但我还没有找到一个我认为合适的定义，所以我这里做一个定义，我认为抢占，就是所有非自愿放弃CPU但由于其他的一些原因而被迫放弃CPU的的都是抢占。 换句话说，也就是如果不是进程自己调用sleep()、schedule()等这些主动放弃cpu的情况，都可以称为抢占，所以在一个允许抢占的系统中我们可以认为大部分的调度都是抢占的表现。因为没有任何一个程序员在写程序的时候，会在功能没有完成之前就sleep会主动把自己调度出去,我相信一个大脑正常的程序员不会这么做。大家都是希望自己的进程可以安全的跑完所有的功能再退出或者暂停，但是系统中有很多进程，操作系统一个重要功能就是要调度，保证所有进程都可以得到cpu资源，当然优先级高的还会得到更多的cpu资源,所以抢占无处不在。</p><h2 id="_2-抢占引发的问题" tabindex="-1">2. 抢占引发的问题 <a class="header-anchor" href="#_2-抢占引发的问题" aria-hidden="true">#</a></h2><p>以下两个问题就是抢占引起的重要BUG，当然都有相应的解决方案，但是我们应该清楚这两个问题</p><h3 id="_2-1-无法唤醒" tabindex="-1">2.1 无法唤醒 <a class="header-anchor" href="#_2-1-无法唤醒" aria-hidden="true">#</a></h3><h3 id="_2-1-无法调度" tabindex="-1">2.1 无法调度 <a class="header-anchor" href="#_2-1-无法调度" aria-hidden="true">#</a></h3><h2 id="_3-小结" tabindex="-1">3. 小结 <a class="header-anchor" href="#_3-小结" aria-hidden="true">#</a></h2><hr><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>转载请注明出处！ <a href="http://www.tsz.wiki" target="_blank" rel="noreferrer">探索者</a></p></div><hr>',14)),h(a,{title:t.$title},null,8,["title"])])}const b=r(s,[["render",o]]);export{f as __pageData,b as default};
